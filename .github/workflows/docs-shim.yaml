name: CI Docs

on:
  pull_request:
    types: [milestoned, opened, reopened, synchronize]
    paths:
      - "**.md"
      - "**.jpg"
      - "**.png"
      - "**.gif"
      - "**.svg"
      - docs/**
      - .vscode/**
      - .gitignore
      - renovate.json
      - .release-please-config.json
      - release-please-config.json
      - CODEOWNERS
      - LICENSE

jobs:
  check-only-docs-changes:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.set_output.outputs.docs_only }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for non-docs changes
        id: docs_check
        uses: ./.github/actions/docs-only
        with:
          base_ref: ${{ github.base_ref }}

      - name: Set outputs
        id: set_output
        run: echo "docs_only=${{ steps.docs_check.outputs.docs_only }}" >> $GITHUB_OUTPUT

  lint-check:
    needs: check-only-docs-changes
    if: ${{ needs.check-only-docs-changes.outputs.docs_only == 'true' }}
    name: Lint Check(Simulated)
    runs-on: ubuntu-latest
    steps:
      - name: Lint Check
        run: echo "Simulating lint-check job - Success!"

  check-paths:
    needs: check-only-docs-changes
    if: ${{ needs.check-only-docs-changes.outputs.docs_only == 'true' }}
    name: Check Paths(Simulated)
    runs-on: ubuntu-latest
    steps:
      - name: Check Paths
        run: echo "Simulating check-paths job - Success!"

  run-package-test:
    needs: check-only-docs-changes
    if: ${{ needs.check-only-docs-changes.outputs.docs_only == 'true' }}
    name: Package Test(Simulated)
    runs-on: ubuntu-latest
    steps:
      - name: Run Package Test
        run: echo "Simulating run-package-test job - Success!"

  evaluate-package-compliance:
    needs: check-only-docs-changes
    if: ${{ needs.check-only-docs-changes.outputs.docs_only == 'true' }}
    name: Compliance Test(Simulated)
    runs-on: ubuntu-latest
    steps:
      - name: Evaluate Package Compliance
        run: echo "Simulating evaluate-package-compliance job - Success!"

  # slim-dev-test.yaml
  test:
    needs: check-only-docs-changes
    if: ${{ needs.check-only-docs-changes.outputs.docs_only == 'true' }}
    name: Slim Dev Test(Simulated)
    runs-on: ubuntu-latest
    steps:
      - name: Shim for Slim Dev Test
        run: |
          echo "Documentation-only change detected; marking test successful."
